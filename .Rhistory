method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
devtools::load_all("~/Wollongong/pkgs/deepspat")
layers <- c(RBF_block(),
AWU(r = r1, dim = 1L, grad = 200, lims = c(-0.5, 0.5)),
AWU(r = r1, dim = 2L, grad = 200, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
run(tf$gradients(Cost, transeta_tf[[9]]))
devtools::load_all("~/Wollongong/pkgs/deepspat")
layers <- c(RBF_block(),
AWU(r = r1, dim = 1L, grad = 200, lims = c(-0.5, 0.5)),
AWU(r = r1, dim = 2L, grad = 200, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
run(tf$gradients(Cost, transeta_tf[[9]]))
run(tf$gradients(Cost, transeta_tf[[4]]))
run(tf$gradients(Cost, transeta_tf[[10]]))
sigmoid_tf
devtools::load_all("~/Wollongong/pkgs/deepspat")
devtools::load_all("~/Wollongong/pkgs/deepspat")
layers <- c(RBF_block(),
AWU(r = r1, dim = 1L, grad = 200, lims = c(-0.5, 0.5)),
AWU(r = r1, dim = 2L, grad = 200, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
run(tf$gradients(Cost, transeta_tf[[10]]))
run(tf$gradients(Cost, transeta_tf[[7]]))
run(tf$gradients(Cost, transeta_tf[[1]]))
devtools::load_all("~/Wollongong/pkgs/deepspat")
layers <- c(RBF_block(),
AWU(r = r1, dim = 1L, grad = 200, lims = c(-0.5, 0.5)),
AWU(r = r1, dim = 2L, grad = 200, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
run(tf$gradients(Cost, transeta_tf[[1]]))
rm(list=ls())
setwd("~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/2Dtests")
source('~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/2Dtests/Experiment2D_new.R')
source('~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/2Dtests/Experiment2D_new.R')
detach("package:deepspat")
layers <- c(RBF_block(),
AWU(r = r1, dim = 1L, grad = 200, lims = c(-0.5, 0.5)),
AWU(r = r1, dim = 2L, grad = 200, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
devtools::load_all("~/Wollongong/pkgs/deepspat")
layers <- c(RBF_block(),
AWU(r = r1, dim = 1L, grad = 200, lims = c(-0.5, 0.5)),
AWU(r = r1, dim = 2L, grad = 200, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
run(tf$gradients(Cost, transeta_tf[[1]]))
run(tf$gradients(swaroed)tf[[1]][1,], transeta_tf[[1]]))
run(tf$gradients(swarped_tf[[1]][1,], transeta_tf[[1]]))
run(tf$gradients(swarped_tf[[1]], transeta_tf[[1]]))
swarped_tf
swarped_tf[[1]]
run(tf$gradients(swarped_tf[[10]], transeta_tf[[1]]))
run(tf$gradients(swarped_tf[[8]], transeta_tf[[1]]))
run(tf$gradients(swarped_tf[[8]][1,], transeta_tf[[1]]))
run(tf$gradients(swarped_tf[[8]][1:2,], transeta_tf[[1]]))
swarped_tf[[8]][1:2,]
devtools::load_all("~/Wollongong/pkgs/deepspat")
layers <- c(RBF_block(),
AWU(r = r1, dim = 1L, grad = 200, lims = c(-0.5, 0.5)),
AWU(r = r1, dim = 2L, grad = 200, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
run(tf$gradients(Cost, transeta_tf[[1]]))
run(tf$gradients(Cost, transeta_tf[[10]]))
run(tf$gradients(Cost, transeta_tf[[9]]))
devtools::load_all("~/Wollongong/pkgs/deepspat")
layers <- c(RBF_block(),
AWU(r = r1, dim = 2L, grad = 200, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
run(tf$gradients(Cost, transeta_tf[[9]]))
run(tf$gradients(Cost, transeta_tf[[10]]))
run(tf$gradients(Cost, transeta_tf[[11]]))
devtools::load_all("~/Wollongong/pkgs/deepspat")
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
devtools::load_all("~/Wollongong/pkgs/deepspat")
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
layers <- c(RBF_block(),
AWU(r = r1, dim = 2L, grad = 200, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
tf$concat(tf$constant(1, dtype = "float32"),
sigmoid_tf(s_tf[, dim, drop = FALSE], theta_tf)), 1L)
tf$concat(list(tf$constant(1, dtype = "float32"),
sigmoid_tf(s_tf[, dim, drop = FALSE], theta_tf)), 1L)
tf$concat(list(tf$constant(matrix(1,200,1), dtype = "float32"),
sigmoid_tf(s_tf[, dim, drop = FALSE], theta_tf)), 1L)
tf$concat(list(tf$constant(matrix(1,2000,1), dtype = "float32"),
sigmoid_tf(s_tf[, dim, drop = FALSE], theta_tf)), 1L)
devtools::load_all("~/Wollongong/pkgs/deepspat")
layers <- c(RBF_block(),
AWU(r = r1, dim = 2L, grad = 200, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
run(tf$gradients(Cost, transeta_tf[[11]]))
run(tf$gradients(Cost, transeta_tf[[9]]))
run(tf$gradients(Cost, transeta_tf[[8]]))
theta_tf
devtools::load_all("~/Wollongong/pkgs/deepspat")
devtools::load_all("~/Wollongong/pkgs/deepspat")
layers <- c(RBF_block(),
AWU(r = r1, dim = 2L, grad = 200, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
devtools::load_all("~/Wollongong/pkgs/deepspat")
layers <- c(RBF_block(),
AWU(r = r1, dim = 2L, grad = 200, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
run(tf$gradients(Cost, transeta_tf[[9]]))
devtools::load_all("~/Wollongong/pkgs/deepspat")
layers <- c(RBF_block(),
AWU(r = r1, dim = 2L, grad = 200, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
devtools::load_all("~/Wollongong/pkgs/deepspat")
layers <- c(RBF_block(),
AWU(r = r1, dim = 2L, grad = 200, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
devtools::load_all("~/Wollongong/pkgs/deepspat")
layers <- c(RBF_block(),
AWU(r = r1, dim = 2L, grad = 200, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
devtools::load_all("~/Wollongong/pkgs/deepspat")
layers <- c(RBF_block(),
AWU(r = r1, dim = 2L, grad = 200, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
devtools::load_all("~/Wollongong/pkgs/deepspat")
layers <- c(RBF_block(),
AWU(r = r1, dim = 2L, grad = 200, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
devtools::load_all("~/Wollongong/pkgs/deepspat")
layers <- c(RBF_block(),
AWU(r = r1, dim = 2L, grad = 200, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
PHI_tf <- tf$sin(lapply(1:50, function(i) tf$sin(tf$constant(i, dtype = "float32")*s_tf[, dim, drop = FALSE])))
PHI_tf
PHI_tf <- tf$sin(lapply(1:50, function(i) tf$sin(tf$constant(i, dtype = "float32")*s_tf[, dim, drop = FALSE])))
s_tf
tf$constant(i, dtype = "float32")
i <- 1
i <- 1
tf$constant(i, dtype = "float32")
PHI_tf <- lapply(1:50, function(i) tf$sin(tf$constant(i, dtype = "float32")*s_tf[, dim, drop = FALSE]))
PHI_tf
PHI_tf <- tf$concat(lapply(1:50, function(i) tf$sin(tf$constant(i, dtype = "float32")*s_tf[, dim, drop = FALSE])), 1L)
PHI_tf
devtools::load_all("~/Wollongong/pkgs/deepspat")
layers <- c(RBF_block(),
AWU(r = r1, dim = 2L, grad = 200, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
run(tf$gradients(Cost, transeta_tf[[9]]))
run(tf$gradients(Cost, transeta_tf[[4]]))
devtools::load_all("~/Wollongong/pkgs/deepspat")
layers <- c(RBF_block(),
AWU(r = r1, dim = 2L, grad = 200, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
run(tf$gradients(Cost, transeta_tf[[4]]))
devtools::load_all("~/Wollongong/pkgs/deepspat")
layers <- c(RBF_block(),
AWU(r = r1, dim = 2L, grad = 200, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
run(tf$gradients(Cost, transeta_tf[[4]]))
sigmoid_tf
devtools::load_all("~/Wollongong/pkgs/deepspat")
layers <- c(RBF_block(),
AWU(r = r1, dim = 2L, grad = 200, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
run(tf$gradients(Cost, transeta_tf[[4]]))
devtools::load_all("~/Wollongong/pkgs/deepspat")
devtools::load_all("~/Wollongong/pkgs/deepspat")
layers <- c(RBF_block(),
AWU(r = r1, dim = 2L, grad = 200, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
theta1
tf$Session()$run(theta)
theta1 <- tf$transpose(theta[, 1, drop = FALSE])
theta2 <- tf$transpose(theta[, 2, drop = FALSE])
tf$Session()$run(theta1)
tf$Session()$run(theta2)
tf$Session()$run(x)
devtools::load_all("~/Wollongong/pkgs/deepspat")
layers <- c(RBF_block(),
AWU(r = r1, dim = 2L, grad = 200, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
run(tf$gradients(Cost, transeta_tf[[4]]))
run(tf$gradients(Cost, transeta_tf[[2]]))
run(tf$gradients(Cost, transeta_tf[[9]]))
devtools::load_all("~/Wollongong/pkgs/deepspat")
devtools::load_all("~/Wollongong/pkgs/deepspat")
layers <- c(RBF_block(),
AWU(r = 3L, dim = 2L, grad = 5, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
run(tf$gradients(Cost, transeta_tf[[9]]))
run(tf$gradients(Cost, transeta_tf[[4]]))
devtools::load_all("~/Wollongong/pkgs/deepspat")
layers <- c(RBF_block(),
AWU(r = 3L, dim = 2L, grad = 200, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
run(tf$gradients(Cost, transeta_tf[[4]]))
layers <- c(RBF_block(),
AWU(r = 50L, dim = 2L, grad = 20, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
run(tf$gradients(Cost, transeta_tf[[4]]))
layers <- c(RBF_block(),
AWU(r = 50L, dim = 2L, grad = 100, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
run(tf$gradients(Cost, transeta_tf[[4]]))
layers <- c(RBF_block(),
AWU(r = 50L, dim = 2L, grad = 50, lims = c(-0.5, 0.5)),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
run(tf$gradients(Cost, transeta_tf[[4]]))
setwd("~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src")
source('~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/Generate_sim_data.R')
source('~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/Generate_sim_data.R')
library(dplyr)
library(devtools)
load_all("../../pkgs/deepspat/")
set.seed(34543)
sim <- sim_data(type = "step1D", ds = 0.001)
jsonlite::write_json(sim, path = "1Dtests/data/step1D.json")
plot(sim$sobs, sim$y)
set.seed(34543)
sim <- sim_data(type = "Monterrubio1D", ds = 0.001)
plot(sim$sobs, sim$y)
set.seed(34543)
sim <- sim_data(type = "AWU_RBF_2D", ds = 0.01, n = 2000L)
sim
sim$s
df <- data.frame(s2 = sim$s[,1], s2 = sim$s[,2], f = sim$f_true)
ggplot(df) + geom_tile(aes(s1, s2, fill = f_true))
library(ggplot2)
ggplot(df) + geom_tile(aes(s1, s2, fill = f_true))
df <- data.frame(s1 = sim$s[,1], s2 = sim$s[,2], f = sim$f_true)
ggplot(df) + geom_tile(aes(s1, s2, fill = f_true))
ggplot(df) + geom_tile(aes(s1, s2, fill = f))
devtools::load_all("~/Wollongong/pkgs/deepspat")
set.seed(34543)
sim <- sim_data(type = "AWU_RBF_2D", ds = 0.01, n = 2000L)
df <- data.frame(s1 = sim$s[,1], s2 = sim$s[,2], f = sim$f_true)
ggplot(df) + geom_tile(aes(s1, s2, fill = f))
devtools::load_all("~/Wollongong/pkgs/deepspat")
set.seed(34541)
sim <- sim_data(type = "AWU_RBF_LFT_2D", ds = 0.01, n = 2000L)
df <- data.frame(s1 = sim$s[,1], s2 = sim$s[,2], f = sim$f_true)
ggplot(df) + geom_tile(aes(s1, s2, fill = f))
detach("package:deepspat")
source('~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/Generate_sim_data.R')
set.seed(34541)
sim <- sim_data(type = "AWU_RBF_LFT_2D", ds = 0.01, n = 2000L)
df <- data.frame(s1 = sim$s[,1], s2 = sim$s[,2], f = sim$f_true)
ggplot(df) + geom_tile(aes(s1, s2, fill = f))
setwd("~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/2Dtests")
setwd("~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/2Dtests")
##############################################################################
## Title:  Reproducible script for generating the results of the 2D experiment
##         in Section 4.2
## Author: Andrew Zammit-Mangion
## Date:   20 December 2018
##############################################################################
library(deepspat)
library(dplyr)
## Set up model
set.seed(1)
set_deepspat_seed(1L)
r1 <- 50L  # number of basis functions for the AWUs
r2 <- 400L # number of basis functions in top layer
simnames <- c("AWU_RBF_LFT_2D.json",
"AWU_RBF_2D.json")
config = 1
method = "ML"
simnames
simname = "AWU_RBF_LFT_2D.json"
## Load data
sim <- jsonlite::read_json(paste0("data/", simname),  simplifyVector = TRUE)
df <- cbind(sim$sobs, sim$y) %>% as.data.frame()
names(df) <- c("s1", "s2", "z")
ayers <- c(LFT(),
AWU(r = r1, dim = 1L, grad = 50, lims = c(-0.5, 0.5)),
AWU(r = r1, dim = 2L, grad = 50, lims = c(-0.5, 0.5)),
RBF_block(),
bisquares2D(r = r2))
layers <- c(LFT(),
AWU(r = r1, dim = 1L, grad = 50, lims = c(-0.5, 0.5)),
AWU(r = r1, dim = 2L, grad = 50, lims = c(-0.5, 0.5)),
RBF_block(),
bisquares2D(r = r2))
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
setwd("~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/2Dtests")
source('~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/2Dtests/Experiment2D_new.R')
setwd("~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/2Dtests")
q()
setwd("~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/2Dtests")
source('~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/2Dtests/Experiment2D.R')
source('~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/2Dtests/Experiment2D.R')
source('~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/2Dtests/Experiment2D.R')
setwd("~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/2Dtests")
source('~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/2Dtests/Experiment2D_analyse_results.R')
library(devtools)
install()
setwd("~/Dropbox/CurrentProjects/Wollongong/pkgs/deepspat/R")
install(dependencies = FALSE)
()
q()
setwd("~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src")
source('~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/Generate_sim_data.R')
setwd("~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/2Dtests")
source('~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/2Dtests/Experiment2D.R')
setwd("~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src")
detach("package:deepspat")
devtools::load_all("~/Wollongong/pkgs/deepspat")
setwd("~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src")
source('~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/Generate_sim_data.R')
## Set up model
set.seed(1)
set_deepspat_seed(1L)
r1 <- 50L  # number of basis functions for the AWUs
r2 <- 400L # number of basis functions in top layer
simnames <- c("AWU_RBF_LFT_2D.json",
## Set up model
set.seed(1)
set_deepspat_seed(1L)
r1 <- 50L  # number of basis functions for the AWUs
r2 <- 400L # number of basis functions in top layer
simnames <- c("AWU_RBF_LFT_2D.json",
"AWU_RBF_2D.json")
for(simname in simnames) {
for(method in c("ML", "VB")) {
simname <- "AWU_RBF_2D.json"
## Load data
sim <- jsonlite::read_json(paste0("data/", simname),  simplifyVector = TRUE)
setwd("~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/2Dtests")
## Load data
sim <- jsonlite::read_json(paste0("data/", simname),  simplifyVector = TRUE)
df <- cbind(sim$sobs, sim$y) %>% as.data.frame()
names(df) <- c("s1", "s2", "z")
## Set up layers
layers <- c(AWU(r = r1, dim = 1L, grad = 200, lims = c(-0.5, 0.5)),
AWU(r = r1, dim = 2L, grad = 200, lims = c(-0.5, 0.5)),
RBF_block(),
LFT(),
bisquares2D(r = r2))
## Start stopwatch
t1 <- proc.time()
## Fit model and predict
d <- deepspat(f = z ~ s1 + s2 - 1, data = df, layers = layers,
method = method, MC = 10L, nsteps = 400L,
learn_rates = init_learn_rates(eta_mean = 0.02))
newdata <- data.frame(s1 = sim$s[, 1],
s2 = sim$s[, 2],
y = sim$f_true)
pred_results <- predict(d, newdata = newdata, nsims = 100L)
## Stop stopwatch
t2 <- proc.time()
cat("Completed in: ", (t2 - t1)[3]," seconds")
## Extract results and save
df_pred <- pred_results$df_pred %>%
left_join(newdata, by = c("s1", "s2"))
save(df_pred, file = paste0("results/",simname,"_",method,".rda"))
AWU
install("~/pk")
setwd("~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/2Dtests")
source('~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/2Dtests/Experiment2D.R')
q()
setwd("~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/MODIStest")
setwd("~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/1Dtests")
source('~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/1Dtests/Experiment1D_analyse_results.R')
q()
setwd("~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/MODIStest")
setwd("~/Dropbox/CurrentProjects/Wollongong/deep_spat_models/deep_spat_src/2Dtests")
library(deepspat)
library(dplyr)
## Set up model
set.seed(1)
set_deepspat_seed(1L)
r1 <- 50L  # number of basis functions for the AWUs
r2 <- 400L # number of basis functions in top layer
simnames <- c("AWU_RBF_LFT_2D.json",
"AWU_RBF_2D.json")
sim <- jsonlite::read_json("data/AWU_RBF_2D.json",  simplifyVector = TRUE)
simold <- jsonlite::read_json("data/AWU_RBF_2D.json",  simplifyVector = TRUE)
simnew <- jsonlite::read_json("~/Downloads/AWU_RBF_2D.json",  simplifyVector = TRUE)
dim(simold$s)
dim(simnew$s)
dim(simnew$sobs)
dim(simold$sobs)
summary(simold$sobs)
summary(simnew$sobs)
identical(simnew$sobs, simold$sobs)
identical(simnew$f_true, simold$f_true)
identical(simnew$s, simold$s)
plot(simnew$f_true, simold$f_true)
identical(simnew$swarped, simold$swarped)
plot(simnew$y, simold$y)
plot(simnew$f_true, simold$f_true)
bisquares2D
q()
